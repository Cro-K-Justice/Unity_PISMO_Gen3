UVOD U PSEUDO-C#-JEZIK

varijabla - mjesto u memoriji rezervirano za pohranu podataka

int - cijeli brojevi (4, 69, 420, 50000000000)
float - decimalni brojevi ( 6.9, 9.11, 4.0)
napomena za float, nakon broja morate napisati slovo "f", npr.
4.0f, 6.9f, -18.9453234f

int x = 5
x = x + 1
x += 2

točka zarez ";" se piše na kraju svake linije naredbe

float x = 5.68f;
int y = 4;
float z = 0;
z = x + y;

int x;
(x je ustvari "null" je brojčano nula 0)

GC = Garbage Collection

1. zadatak zbroji x i y ako je x 5, a y 8.

int x = 5;
int y = 8;
int z = x + y;

MATEMATIČKI
5 + 8 = 13
PROGRAMSKI
13 = 5 + 8;

2. zadatak kolika je razlika ako je x 19, a y je 7.5? Razliku zapišite u x.

float x = 19f;
float y = 7.5f;
x = x - y; 
(mogli smo napisati: x-= y;)

3. Zadatak, programski napišite ovaj matematički zapis: 
9 + 11 = 20

int x = 9;
int y = 11;
int z = x + y;

4. Zadatak, programski napišite ovaj matematički zapis: 
9.11 + 4.20 = z

float mama = 9.11f;
float tata = 4.20f;
float z = mama + tata;

NAZIVI METODA
metoda 
- skup naredbi koje se trebaju dogoditi u određenim uvijetima
- Svaka metoda ima svoje uvijete

ključne metode u Unityu
- Awake - odvija se u 0 (nultom frameu, awake metoda se događa prije stvaranja objekata na sceni, AKO JE SKRIPTA UGAŠENA DA NE RADI, AWAKE METODA ĆE SE SVEJEDNO IZVRŠITI)

- Start - izvršava se na prvom frameu i samo jedanput

- Update - svaki frame jedan put (dakle 60 FPS - 59 puta se odvrti)

5. Zadatak U startu neka se zbroje 2 broja.

int x = 5;
int y = 10;
int z;

void Start()
{
	z = x + y;
}

6. Zadatak zbrojite u startu x koji je 17.2 i y koji je 12.32, u varijablu "maška"

float x = 17.2f;
float y = 12.32f;
float maška;

void Start()
{
	maška = x + y;
}

7. Zadatak, povećavajte x koji je 5 za 5 svaki frame.

int x = 5;

void Update()
{
	 x += 5;
}

Zadatak 8. Neka je x 6 , a y je 7 i njihov zbroj neka se izracuna u startu, a onda svaki frame neka se rezultat uveca za x podjeljeno sa 2.

int x = 6;
int y = 7;
int rezultat;
int pod;

void Start()
{
	rezulatat = x + y;
	pod = x / 2;
}

void Update()
{
	rezultat += pod;
}


Zadatak 9.
Ako je x vrijednost -3.6, a y vrijednost je 10 koliki je njihov zbroj u startu? Neka svaki frame rezultat raste za umnožak x i y.

float x = -3.6f;
int y = 10; (može biti i: float y = 10f;)
float zbroj;
float umnozak;

void Start()
{
	zbroj = x + y;
	umnozak = x * y;
}

void Update()
{
	zbroj += umnozak;
}

UVIJETI:

Što su uvijeti?
Uvijet je skup riječi koje govore što se treba ispuniti kako bi se izvršio red naredbi (metoda)

Primjeri uvijeta:
AKO - if
KADA - when (NE)
DOK - while

Kada će se zadovoljiti ako uvijet?
U uvjetima koristima 2 znaka npr. ==, <=, != itd.
== jednako je
!= različito je
|| ili
&& i

if(1+1 == 2) - DA
if(2+3 != 4) - DA
if(18 > 19) - NE
if(21 <= 21) - DA
if(21 > 22 || 22 > 13) - DA

if(istina || laž) - Istina
if(istina || istina) - Istina
if(laž || istina) - Istina
if(laž || laž) - Laž
if(istina && istina) - Istina
if(istina && laž) - Laž

Zadatak 11. x je veličine 8, a y je veličine 13, ako je njihov zbroj manji od 50 neka se x poveća za samoga sebe i tako sve dok je zbroj manji od 50

int x = 8;
int y = 13;

void Update()
{
	if(x+y < 50)
	{
		x += x;
	}
}

Zadatak 12. Neka je početna vrijednost health 100, neka svaki frame gubimo za 0.01 healtha osim kada nam health padne ispod 10, onda počnemo gubiti health za 0.02.

float health = 100f;
float damage = 0.01f;

void Update()
{
	if(health < 10)
	{
		damage = 0.02f;
	}

	health -= damage;
}



zadatak 13. Jesmo li mogli otići u minus sa healthom?
DA

Zadatak 14. Kada je health 0 ili manje neka se ispiše poruka u konzoli "Umro si!"
ISPITIVANJE IDE "Debug" - prikazuje detaljnije kada što i kako

float health = 100f;
float damage = 0.01f;

void Update()
{
	if(health >= 10)
	{
		damage = 0.01f;
	}

	else if(health < 10)
	{
		damage = 0.02f;
	}

	if(health <= 0)
	{
		Debug.Log("Umro si!");
		damage = 0;
	}

	health -= damage;
}


Zadatak 13. Pretvorite u programski zapis
(15 - 12) = x
ako je x > 100 onda x / 3.5
ali ako je x <= 100 onda x * 2
Ponavljati ako uvijete dok se jedan od njih ne zadovolji (dakle svaki frame)

float x;

void Start()
{
	x = 15 - 12;
}

void Update()
{
	if(x > 100)
	{
		x = x / 3.5f;
	}

	else
	{
		x = x * 2;
	}
}

if - ako uvijet koji se prvi gleda u nizu, ako je više if if uvijeta onda se gledaju po linijskom zapisu i prestaju gledati kada se prvi od njih zadovolji

npr.
if(laž)
if(laž && laž)
if(istina) - tek ovaj se gleda

else if - ako je ispred njega if koji nije zadovoljen onda će se ovaj gledati, koristi else if ako imate 3 ili više if uvijeta

npr.

if(laž)
else if(istina && laž)
else if(istina) - ovaj se izvršava


else - zadnji u nizu if-ova može biti drugi ili stoti nije bitno, bitno je da je zadnji u zapisu

npr.

if(laž)
else if(laž)
else - automatski istina

npr 2.
if(laž)
else - automatski istina

NOVA VARIJABLA:

bool

bool ima dva moguća zapisa a to su "true" i "false"

zadatk 14. Ako je 2+3 > 4 onda neka je bool točan.

(kada bool ostavimo prazno on je null, ali kada je bool null onda je false)

bool provjera; 

void Start()
{
	if(2+3 > 4)
	{
		provjera = true;
	}
}

FAR CRY 3 
2.000.000 - 5.000.000
19.99$



SCUM
1.000.000 - 2.000.000
19.99$

POTTERY
VOODOO

RAID
LION GAME LION

PONAVLJANJE

1. Zadatak. Napišite programski matematičku jednadžbu: 5+2=x

int y = 5;
int mama = 2;
int x = y + mama;

2. Zadatak. Napišite programski matematičku jednadžbu: (5+7) * 3.27 / 8 + 11 = x

float x = (5+7) * 3.27f / 8 + 11;

3. Zadatak napišite programski matematičke jednadžbe: 
5 * 4 + 2.1 = x
6.9 / 9.6 * x2(na kvadrat) = y
y + x = z

float x = 5 * 4 + 2.1f;
float y = 6.9f / 9.6f * (x * x);
float z = y + x;

4. Zadatak. Ako je x koji je 17 pomnožen sa y koji je 9, veće od 922 onda neka je bool "kill" istinit

int x = 17;
int y = 9;
bool kill = false; (bool kill;)

void Start()
{
	if(x * y > 922)
	{
		kill = true;
	}
}


5. Ako je x koji je 9.2 uvećan za y koji 
je 5 * (8.2 - 11 * 2.11) manji od 133 onda neka x raste za svaki frame za 11.

float x = 9.2f;
float y = 5 * (8.2f - 11 * 2.11f);
float r = 133;

void Update()
{
	if(x + y < r)
	{
		x += 11;
	}
}

6. Zadatak. Imate varijablu health koja krece od 100, svakih 5 frameova se regenerira za 0.5 healtha kada postane manji od 100. Health ne smije biti veći od 100. U startu oduzmite health za broj vaših godina.

float health = 100;
int frame_count = 0;
int broj_godina = 19;

void Start()
{
	health -= broj_godina;
}

void Update()
{
	if(health <= 99.5f)
	{
		if(frame_count < 5)
		{
			frame_count++; 
			(++ znaci povecaj za jedan)
		}
		else if(frame_count == 5)
		{
			health += 0.5f;
			frame_count = 0;
		}
	
	}
}

7. Zadatak. Ispišite u konzoli tekst: "Ovo je " + vrsta metode:
a) Awake
b) Start
c) Update

void Awake()
{
	Debug.Log("Ovo je Awake");
}

void Start()
{
	Debug.Log("Ovo je Start");
}

void Update()
{
	Debug.Log("Ovo je Update");
}



8. Zadatak. Nadogradite skriptu iz zadatka 7. tako da definirate varijablu koja krece od 0, te se u svakoj metodi povecava za 1.

int x = 0;

void Awake()
{
	Debug.Log("Ovo je Awake");
	x++;
}

void Start()
{
	Debug.Log("Ovo je Start");
	x++;
}

void Update()
{
	Debug.Log("Ovo je Update");
	x++;
}



9. Zadatak. Napišite skriptu koja će izračunati umnožak 2 broja te ispisati njihovu vrijednost u konzoli sa tekstom "Umnožak 'broj 1' i 'broj 2' je 'rezultat'"

int x = 4;
int y = 5;
int z;

void Start()
{
	z = x * y;
	Debug.Log("Umnožak " + x + " i " + y + " je " + z);
}


NASTAVAK PSEUDO C#

U unityu postoji mogućnost mjenjanja varijabli bez otvaranja koda.
Taj dio se nalazi u tabu inspector.
Kako bi se mogli pristupati varijablama i u inspectoru i iz drugih scripti koristimo sljedeće:

"public" vrsta_varijable naziv_varijable = vrijednost;
npr.

public int broj = 8;

za zaključano da se ne može pristupati:

"private" vrsta_varijable naziv_varijable = vrijednost;
npr. 

private int broj = 8; jednako kao i "int broj = 8;"

Zadatak 1.

Napišite skriptu gdje možete dva broja zbarajti. Vrijednosti brojeva su javne pa se vide u inspectoru. Rezultat se ispisuje u konzoli.

public int a = 1;
public int b = 2;
int c;

void Start()
{
	c = a + b;
	Debug.Log("broj jedan " + a + " i " + " broj dva " + " su broj " + c);
}


Zadatak 2.

Napišite skriptu gdje se zbaraju dva javna broja. Ako je zbroj brojeva veci od 15 onda neka javni bool "banana" postane true, a ako je manji da bude false


public int x = 3;
public int y = 5;
int z;
public bool banana;

void Start()
{
	z = x + y;
	if(z > 15)
	{
		banana = true;
	}
	else if(z < 15)
	{
		banana = false;
	}
}


NOVO - FOR PETLJA (ZA)

for(int i = 0; uvijet; inkrement)
{
	naredba;
}

npr.

int broj_enemya = 3;
Metoda Start:
for(int i = 0; i < broj_enemya; i++)
{
	Debug.Log("Stvoren je " + i + ". enemy!");
}


for => dok je uvijet zadovoljen obavljaj naredbe
int i => brojač, nemora se zvati i, može kako želite, najčšće je i
uvijet => uvijet koji se zadovoljava
inkrement => utječe na brojač, uvijet s kojim djelujemo na brojač



1. Zadatak za for petlju.
Napravite skriptu koja ima 3 if uvijeta. Svaki uvijet je definiran bool-om. 1. bool se zove easy, 2. normal, a 3. hard.
a) ako je svaki bool false u početku, neka bool "normal" postane true
b) za uvijet easy neka je broj enemya 5 i tako nek je varijabla definirana prije samog početka. Odnosno u 0-tom frameu.
c) ako je uvijet igre "normal" onda neka je broj enemya za 3 puta veći od easy načinu
d) ako je uvijet igre "hard" onda neka je broj enemya za 2 puta veći nego u normal načinu
e) Nakon što se provjeri koji je mod, neka se ispiše stvaranje svakog enemya s njegovim rednim brojem kao i u primjeru za for petlju:
Debug.Log("Stvoren je " + i + ". enemy!");


public bool easy;
public bool normal;
public bool hard;
int broj_enemya;

void Awake()
{
	broj_enemya = 5;

	if(easy == false && normal == false && hard == false)
	{
		normal = true;
	}
}

void Start()
{
	if(easy == true)
	{
		broj_enemya = broj_enemya;
	}

	else if(normal == true)
	{
		broj_enemya = broj_enemya * 3;
	}
	
	else if(hard == true)
	{
		broj_enemya = broj_enemya * 6;
	}

	for(int i = 0; i < broj_enemya; i++)
	{
		Debug.Log("Stvoren je " + i + ". enemy!");
	}
}

NASTAVAK - PONAVLJANJE

Kakav zapis ide u vrstu varijable int?

Cijeli broj npr. 1 

Kakav zapis ide u vrstu varijable float?

Decimalni brojevi npr. 2.5f

Kakav zapis ide u vrstu varijable bool?

Istina ili laž npr. false

Ako je int osavljen prazan, vrijednost mu je?

Null odnosno 0

Ako je bool ostavljen prazan, vrijednost mu je?

Netočno, odnosno false

Zadatak. 1. Napišite programski matematički zapis:
5 * (22 - 11) / 8 = x
9 * 7 * x / z = y
x * 88 - 111 = z

float x;
float y;
float z;

void Start()
{
	x = 5 * (22 - 11) / 8;
	z = x * 88 - 111;
	y = 9 * 7 * x / z;
}


Koja je razlika između 3 standardne Unity metode: 
a) Awake
b) Start
c) Update

Awake se odvija u 0-tom frameu, prije stvaranja objekata na sceni
Start se odvija u prvom frameu, u njemu se stvaranju objekti
Update se odvija svaki frame, primjer lošeg korištenja metode - movement gdje se uspoređuje fps između dva uređaja..., primjer dobrog korištenja metoda - čekanje na playerov input (na korisnikovu interakciju sa periferijom računala/uređaja)

Zadatak 2. 
Prepišite skriptu i prepravite greške:

int x = 11;
float n M = 2.4f;

void Start
{
	z = n M * 2.5f - x;
}


________ Ispravak _______

int x = 11;
float n_M = 2.4f;
float z;

void Start()
{
	z = n_M * 2.5f - x;
}

Zadatak 3. 
Prepišite skriptu i prepravite greške:

float X_X = 67f;
public float xD;
private float c_N = 99.54321f:

void Update()
{
	if(X_X * xD - cN >= 69.22 * 2;
	[
		X_X -- 19;
		xD *= 1.2f;
		c_M -= 1.1f;
	]



________ Ispravak _______


float X_X = 67f;
public float xD;
private float c_N = 99.54321f;

void Update()
{
	if(X_X * xD - c_N >= 69.22f * 2)
	{
		X_X -= 19;
		xD *= 1.2f;
		c_N -= 1.1f;
	}
}



Zadatak 4. 
Prepišite skriptu i prepravite greške:


boll marmun = false;
int x = 11;
int z = 12;
int y;

void Start()
{
	if(x / 11 & z - 12 = 1)
	{
		marmun = true;
		y = z * x;
	}
}

void update()
{
	y = y * z * x:
}


________ Ispravak _______


bool marmun = false;
int x = 11;
int z = 13;
int y;

void Start()
{
	if(x / 11 && z - 12 == 1)
	{
		marmun = true;
		y = z * x;
	}
}

void Update()
{
	y = y * z * x;
}

NOVO - C# PSEUDO

nova vrsta varijable
var - vrsta varijbale koja je ne definirana, odnosno prilagođava se unosu
npr.
int x = 11;
float y = 1.12f;

var z = x * y;

NOVA VRSTA PETLJE "while" (dok petlja)

odvija se sve dok je tvrdnja točna!
OPASNA ZA UNITY! - ako je napisana krivo, ruši (crash) Unity, ali ne samo Unity nego u gorim situacijama može izbrisati dio projekta i/ili ugasiti i računalo

Kako se piše while:

while(uvijet)
{
	naredba;
	utjecanje na uvijet naredba;
}

primjer:

int broj = 4;

void Start()
{
	while(broj > 0)
	{
		Debug.Log("Broj je: " + broj);
		broj--;
	}
}

KAKO NE KORISTITI WHILE PETLJU!

...
void Update()
{
	while(gameOver == false)
	{
		if(spawned == false)
		{
			//Učini nešto
		}
		else if(timer >= 2.0f)
		{
			//Učini nešto
		}
		else
		{
			timer += Time.deltaTime;
		}
	}
}
...


NOVO 

// - označavaj početak pisanja komentara u jednu liniju koda
npr. //Metoda ispod služi za pružanja inforamcija o playerovom healthu

PISANJE VLASTITIH METODA:

Kako napisati vlastitu metodu:

void NazivMetode(Unosne vrijednosti)
{
	Naredba;
}

Primjer vlastite metode:

void GameOver()
{
	Application.Quit(); // naredba koja gasi aplikaciju/igru
}

Korištenje vlastite metode:

int health = 100;

void Update()
{
	if(health >= 0)
	{
		health -= 0.01f;
	}
	else
	{
		GameOver();
	}	
}
void GameOver()
{
	Application.Quit(); // naredba koja gasi aplikaciju/igru
}


Zadatak 1. Napravite svoju metodu koja će ispisati u konzoli "Game over"

void Smrt()
{
	Debug.Log("Game over");
}

zadatak 2. napravite svoju metodu koja u konzoli ispisuje da je prošlo 60 frameova. Neka se metoda zove FrameCounter i neka se poziva u Update metodi

int frameCounter = 0;

void FrameCounter()
{
	if(frameCounter == 60)
	{
		Debug.Log("Prošlo je 60");
		frameCounter = 0;
	}
}

void Update()
{
	frameCounter++;
	FrameCounter();
}

_____DRUGI NAČIN________

int f_count;

void Update()
{
	f_count++;
	if(f_count == 60)
	{
		FrameCounter();
		f_count = 0;
	}
}

void FrameCounter()
{
	Debug.Log("Prošlo je 60");
}

Zadatak 3. Napišite for petlju koja ispisuje u konzoli odbrojavanje (npr. 10. 9. 8. ...), ali kreće od početne javne vrijednosti, te ne smije pasti ispod 0 (Zadnji broj odbrojani treba biti 0.)

public int x;

void Start()
{
	for(int i = x; i >= 0; i--)
	{
		Debug.Log(i + ".");
	}
}

//Inkrement dio se izvršava tek kada se sve naredbe u for petlji dogode

Zadatak 4. Napišite while petlju koja je istinita dok god je int x veće ili jednako od 0. U while petlji treba biti naredba koja x smanjuje za 2, te ispisuje u konzoli ispisuje '"Ja volim " + x '

public int x;

void Start()
{
	while(x >= 0)
	{
		x -= 2;
		Debug.Log("Ja volim " + x);
	}
}

Zadatak 5. Vrijednost x je javna, dok je vrijednost y = 10, oduzmite od x y, te ako je rezultat negativan neka se ispiše "Negativno", ako je veći neka ispiše "Pozivtino", a ako je rezultat 0 neka ispiše "Neutral".

public int x;
int y = 10;

void Start()
{
	var z = x - y;

	//Unutar metoda smijemo definirati varijable, ali ih onda možemo koristiti samo kroz tu metodu, šta to konkretno znači, to znači da varijablu "z" ne možete koristiti niti u Updateu niti u Awakeu niti u nekoj vašoj vlastitoj metodi
	if(z > 0)
	{
		Debug.Log("Pozitivno");
	}
	else if(z < 0)
	{
		Debug.Log("Negativno");
	}
	else
	{
		Debug.Log("Neutral");
	}
}


NOVA VRSTA VARIJABLE:


string

string je tekstualni zapis, mogu se zapisivati riječi, slova, brojevi

npr.

string ime = "Pero";
string prezime = "Perić";
string datum_rodenja = "19.1.2011";
string visina = "189 cm";

Zadatak 1.

Napišite skriptu koja će igraču omogućiti da upiše vrijednosti za svoje ime, prezime, godine, visinu, te grad iz kojeg dolazi. A u metodi start u konzoli ispisati sve njegove unešene inforamcije. npr. 
("Ja sam Marko Marić. Imam 28 godina, te sam visok 169 cm i dolazim iz Špičkovine!")


public string ime;
public string prezime;
public int godine;
public int visina;
public string grad;

void Start()
{
	Debug.Log("Ja sam " + ime + " " + prezime + ". Imam " + godine + " godina, te sam visok " + visina + " cm i dolazim iz " + grad + "!");
}





